---
  - name: "Warn if we do not have NICs configured"
    assert:
      that:
        - "nic_public is defined"
        - "nic_private is defined"
  - name: "Remove all the interfaces we do not know"
    shell: |
      for nic in $( ip l show | grep '^[0-9]' | sed 's/^[0-9]\+: \([^@ ]\+\)\(@[^ ]\+\)\?: .*$/\1/' ); do
          if [ "$nic" = "lo" -o "$nic" = "{{ nic_private }}" -o "$nic" = "{{ nic_public }}" ]; then
              echo "Skipping $nic as it is protected one"
              continue
          fi
          ip link set "$nic" down
          for addr in $( ip a show dev "$nic" scope global | grep '^\s\+inet ' | sed 's/\s\+inet \([0-9.]\+\/[0-9]\+\) .*/\1/' ); do
              ip addr del "$addr" dev "$nic"
          done
          rm -rf "/etc/sysconfig/network-scripts/ifcfg-$nic"
          ip link delete dev "$nic"
      done
      true

  - name: "Check for interface file presence"
    stat:
      path: "/etc/sysconfig/network-scripts/ifcfg-{{ nic_private }}"
    register: if_file_stat

  - name: "Create a new interface file"
    block:
    - name: "Get the MAC address of the {{ nic_private }}"
      command: cat /sys/class/net/{{ nic_private }}/address
      register: private_nic_mac_address

    - name: "Build a new interface file"
      template:
        src: templates/ifcfg-ethx.j2
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{ nic_private }}"
        owner: root
        group: root
      register:
        if_file_created
    when:
      if_file_stat.stat.exists == False

  - name: "Ensure ONBOOT=yes"
    lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-{{ nic_private }}
      regexp: "^ONBOOT="
      line: "ONBOOT=yes"
  - name: "Ensure BOOTPROTO=static"
    lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-{{ nic_private }}
      regexp: "^BOOTPROTO="
      line: "BOOTPROTO=static"
  - name: "Ensure correct IP address"
    lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-{{ nic_private }}
      regexp: "^IPADDR="
      line: "IPADDR={{ ip }}"
  - name: "Ensure correct netmask"
    lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-{{ nic_private }}
      regexp: "^NETMASK="
      line: "NETMASK=255.0.0.0"
  - name: "Ensure bridge is not defined"
    lineinfile:
      dest: /etc/sysconfig/network-scripts/ifcfg-{{ nic_private }}
      regexp: "^BRIDGE="
      state: "absent"

  - name: "Kill all dhclients (network service was not restarting)"
    command:
      killall dhclient
    ignore_errors: true

  - name: "Restart network"
    service:
      name: network
      state: restarted
...
