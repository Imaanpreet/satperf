---
# - name: "Get group name of our location"
#   ansible.builtin.set_fact:
#     location_groupname: "location_{{ location | lower }}"

# - ansible.builtin.set_fact:
#     location_groupname_groups: "groups[location_groupname]: {{ groups[location_groupname] }}"

# - debug:
#     msg: "location_groupname_groups: {{ location_groupname_groups }}"

# - name: "Set default variable(s) values"
#   ansible.builtin.set_fact:
#     registration_target: "{{ tests_registration_target | default(groups[location_groupname] | intersect(groups['satellite6']) | first) }}"
#   when:
#     - groups[location_groupname] | intersect(groups['satellite6']) | length > 0

# - name: "Set default variable(s) values"
#   ansible.builtin.set_fact:
#     registration_target: "{{ tests_registration_target | default(groups[location_groupname] | intersect(groups['capsules']) | first) }}"
#   when:
#     - "'capsules' in groups"
#     - groups[location_groupname] | intersect(groups['capsules']) | length > 0

# - name: "Set default variable(s) values"
#   ansible.builtin.set_fact:
#     registration_target: "{{ tests_registration_target | default(groups[location_groupname] | intersect(groups['capsule_lbs']) | first) }}"
#   when:
#     - "'capsule_lbs' in groups"
#     - groups[location_groupname] | intersect(groups['capsule_lbs']) | length > 0

# - debug:
#     msg: "registration_target: {{ tests_registration_target }}"

- name: "Download host registration script from registration target"
  ansible.builtin.get_url:
    url: http://{{ tests_registration_target }}/pub/host-registration.sh
    dest: /root/clients_host-registration.sh
    mode: '0400'
    force: true

- name: "Distribute client registration script"
  throttle: 8
  ansible.builtin.copy:
    src: "clients_host-registration.yaml"
    dest: "/root/clients_host-registration.yaml"
    force: true

- name: "Install Ansible"
  throttle: 8
  ansible.builtin.dnf:
    name: ansible-core
    state: latest

- name: "Ensure we have Ansible config with default section"
  throttle: 8
  ansible.builtin.lineinfile:
    dest: /etc/ansible/ansible.cfg
    insertafter: EOF
    line: '[defaults]'
    state: present

- name: "Ansible should not check host keys"
  throttle: 8
  ansible.builtin.lineinfile:
    dest: /etc/ansible/ansible.cfg
    regexp: '^.*host_key_checking'
    insertafter: '[defaults]'
    line: 'host_key_checking = False'
    state: present

- name: "Distribute private key"
  throttle: 8
  ansible.builtin.copy:
    src: "../../{{ ansible_ssh_private_key_file }}"
    dest: /root/id_rsa_key
    mode: "u=rw,g=,o="
    force: true
...
