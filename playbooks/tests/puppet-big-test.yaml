---
- hosts: docker-hosts
  remote_user: root
  gather_facts: no
  vars_files:
    - ../../conf/satperf.yaml
    - ../../conf/satperf.local.yaml
  vars:
    size: 1   # should be provided via external parameter
    forks: "{{ size }}"   # in how many forks should playbooks run?
    use_only_fresh: true   # should we use only containers which were not registered yet?
    update_used: true   # once we use containers, should we update /root/containers-used-count?
  tasks:
    - name: "Deploy docker host side of big puppet test"
      template:
        src: puppet-big-client.yaml.j2
        dest: /root/puppet-big-client.yaml
        validate: python -c 'import yaml; print yaml.safe_load(open("%s", "r"))'
      tags: always

    - name: "Ansible on docker host configured to ignore host keys"
      command:   # FIXME: Use lineinfile
        sed -i 's|^.*host_key_checking.*$|host_key_checking = False|' /etc/ansible/ansible.cfg
      tags: always

    - import_tasks: includes/prepare_clients_ini.yaml
      vars:
        size: "{{ size }}"
      tags: always

    - name: "Determine marker variable"
      set_fact:
        marker: "{{ lookup('pipe', 'date --utc --iso-8601=seconds') }}"
      run_once: yes
      tags: always


    - name: "Set variables for single module job"
      set_fact:
        nickname: single
        content_puppet_env: KT_Default_Organization_Library_SatPerfContentViewPuppetFakeModule_2
        content_puppet_module_name: satperftest
      tags: SINGLE

    - name: "Set variables for single module job"
      set_fact:
        nickname: bunch
        content_puppet_env: KT_Default_Organization_Library_SatPerfContentViewPuppetRealModules_3
        content_puppet_module_name: acl,apache,archive,firewalld,gcc,haproxy,java,limits,motd,nsswitch,ntp,pam,rsyslog,ssh,sysstat,tomcat
      tags: BUNCH


    # Puppet registration
    - import_tasks: includes/puppet-big-test-register.yaml
      tags: always

    # Puppet deploy
    - import_tasks: includes/puppet-big-test-deploy.yaml
      tags: always


    - import_tasks: includes/update_used_containers.yaml
      vars:
        used_count: "{{ containers_used_count|int + size|int }}"
      tags: always
...
