---
# satperf project settings
satperf_hosts: conf/hosts.ini
satperf_private_key: conf/id_rsa
satperf_log_file: log/satperf.log
satperf_tname: sample_run
satperf_log_file_size: 10000 # in bytes

# Credentials for RHSM (for Satellite and Docker host machines  registration, Capsules are registered into Satellite)
rhsm_user: your_portal_username
rhsm_pass: your_portal_passowd
rhsm_pool: 'Pool you want to consume'

# Satellite
sat_user: admin
sat_pass: changeme
sat_email: root@localhost
sat_org: Default Organization
sat_orgid: 1
sat_location: Default Location
sat_releasever: "7Server"
sat_repos:
  - product: "Red Hat Enterprise Linux Server"
    reposet: "Red Hat Enterprise Linux {{ ansible_distribution_major_version }} Server (RPMs)"
    repo: "Red Hat Enterprise Linux {{ ansible_distribution_major_version }} Server RPMs x86_64 {{ sat_releasever }}"
  - product: "Red Hat Enterprise Linux Server"
    reposet: "Red Hat Enterprise Linux {{ ansible_distribution_major_version }} Server - RH Common (RPMs)"
    repo: "Red Hat Enterprise Linux {{ ansible_distribution_major_version }} Server - RH Common RPMs x86_64 {{ sat_releasever }}"
  - product: "Red Hat Satellite Capsule"
    reposet: "Red Hat Satellite Capsule 6.2 (for RHEL {{ ansible_distribution_major_version }} Server) (RPMs)"
    repo: "Red Hat Satellite Capsule 6.2 for RHEL {{ ansible_distribution_major_version }} Server RPMs x86_64"
  # - product: "Red Hat Software Collections for RHEL Server"
  #  reposet: "Red Hat Software Collections RPMs for Red Hat Enterprise Linux {{ ansible_distribution_major_version }} Server"
  #  repo: "Red Hat Software Collections RPMs for Red Hat Enterprise Linux {{ ansible_distribution_major_version }} Server x86_64 {{ sat_releasever }}"

# Satellite install options
sat_install_source: cdn   # either 'cdn' or 'repo'
                          #   'cdn' ... configure value of 'sat_cdn_reponame'
                          #   'repo' ... configure value of 'sat_repo_file'
sat_repo_file: ../../../../../conf/sat62.repo
sat_cdn_reponame: 'rhel-{{ ansible_distribution_major_version }}-server-satellite-6.2-rpms'
sat_install_pool: 'Pool you want to use'   # when installing from CDN, this have to contain Satellite and Software Collections
                                           # when installing from custom repository, Software Collections should be enough
# sat_installer_pkg: capsule-installer   # Satellite 6.1
# sat_installer_cmd: katello-installer   # Satellite 6.1
sat_installer_pkg: satellite   # Satellite 6.2
sat_installer_cmd: satellite-installer --scenario satellite   # Satellite 6.2
sat_manifest: ../../../../../conf/manifest.zip

# Capsule install options
sat_capsule_pool: 'Pool you want to consume'   # Needs to contain Capsule
capsule_install_source: cdn   # either 'cdn' or 'repo'
                              #   'cdn' ... configure value of 'capsule_cdn_reponame'
                              #   'repo' ... configure value of 'capsule_repo_file'
capsule_repo_file: ../../../../../conf/capsule62.repo
capsule_cdn_reponame: 'rhel-{{ ansible_distribution_major_version }}-server-satellite-capsule-6.2-rpms'
capsule_install_pool: 'Pool you want to use'   # when installing from CDN, this have to contain Capsule
# capsule_installer_pkg: capsule-installer   # Satellite 6.1
# capsule_installer_cmd: katello-installer   # Satellite 6.1
capsule_installer_pkg: satellite-capsule   # Satellite 6.2
capsule_installer_cmd: satellite-installer --scenario capsule   # Satellite 6.2

# Docker hosts
docker_host_containers: 50

# Environment
ntp_server: clock.redhat.com

# EPEL
epel_release_rpm: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"

# Monitoring
pbench_enabled: True
pbench_repo_file: "https://copr.fedorainfracloud.org/coprs/ndokos/pbench/repo/epel-{{ ansible_distribution_major_version }}/ndokos-pbench-epel-{{ ansible_distribution_major_version }}.repo"

# Product names to be created
tests_products: perf-gen1 perf-gen2 perf-gen3 perf-gen4 perf-gen5 perf-gen6 perf-gen7 perf-gen8
tests_backup_path: /home/backup

# workload settings
methods:
  repo_count: 5 #Number of repos
  cv_scale: 1 #Content view Scale: True(1), False(0)
  cv_count: 10 #if CVSCALE=true, then  Number of content views
  cv_pub: 10 #number of times content publish
  concurrent: 1 #concurrent (1) or sync (0)

Monitoring:
  # for collectd multi/single-host installations
  # one/all of satellite6:docker-hosts:capsules
  # hosts: satellite6:capsules
  hosts: satellite6

########################################
# Collectd Configuration
########################################
# Interval in seconds
collectd_interval: 10
# Run collectd on specific Satellite-6 nodes:

########################################
# Graphite Configuration
########################################
# Graphite Server gathered as groups['graphite']|first (Collectd -> Graphite server)
# Port Graphite is listening on
graphite_port: 80
# Graphite prefix / Cloud name used both with graphite and grafana dashboards
graphite_prefix: satellite62
# Graphite username and password for login on the dashboard
graphite_username: root
graphite_password: password

########################################
# Grafana Dashboarding Configuration
########################################
# Grafana Server gathered as groups['grafana']|first (Can be hosted on the Graphite server)
# Port Grafite is listening on
grafana_port: 3000
# Grafana username and password
grafana_username: admin
grafana_password: password

# VMs provisioning
vms:
  kvm1.example.com:
    - name: kvm1-vm1
      cpu_count: 4
      mem_size: 16000
      disk_size: 50
      nic_10g_bridge: br0
      nic_1g_bridge: br1
      ks: rhel72-vm.ks
      ip: 172.1.1.2
      netmask: 255.0.0.0
      rootpw: password
vms_kss_os: http://repos.example.com/RHEL-7/7.2/Server/x86_64/os/
vms_ssh_key: "{{ lookup('file', '../../conf/id_rsa.pub') }}"
...
