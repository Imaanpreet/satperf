---
- hosts: satellite6
  remote_user: root
  gather_facts: yes
  vars_files:
    - ../../conf/satperf.yaml
    - ../../conf/satperf.local.yaml
  vars:
    siege_result_json_file: 'siege-webui-result.json'
  tasks:
    - name: "Enable EPEL on RHEL"
      yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: present
      when: ansible_distribution == "RedHat"
    - name: "Enable EPEL on CentOS"
      yum:
        name: epel-release
        state: present
      when: ansible_distribution == "CentOS"
    - name: "Install siege"
      yum:
        name: siege
        state: present
    - name: "Disable EPEL"
      yum:
        name: epel-release
        state: absent

    - name: "Get authenticity token"
      shell:
        curl --cookie-jar /root/curl.cookies --silent --insecure -X GET https://localhost/users/login | grep 'name="csrf-token"' | sed 's/.*content="\([a-zA-Z0-9/+=]\+\)".*/\1/'
      args:
        warn: no
      register: authenticity_token_cmd
    - name: "Log in"
      shell:
        curl https://localhost/users/login -X POST --data "utf8=%E2%9C%93&authenticity_token={{ authenticity_token_cmd.stdout | urlencode }}&login%5Blogin%5D={{ sat_user }}&login%5Bpassword%5D={{ sat_pass }}&commit=Log+In" --cookie /root/curl.cookies --cookie-jar /root/curl.cookies --insecure --location
    - name: "Read session ID"
      shell:
        grep _session_id /root/curl.cookies | cut -f 7 | tail -n 1
      register: session_id_cmd

    - name: "Create seage config directory"
      file:
        path: /root/.siege
        state: directory
    - name: "Create siege config"
      copy:
        dest: /root/.siege/siege.conf
        content: |
          json_output = true
          show-logfile = false
        force: yes
    - name: "Create siege urls.txt"
      copy:
        dest: /root/.siege/urls.txt
        content: |
          https://localhost/
          https://localhost/hosts
        force: yes

    - name: "Run siege"
      command: "siege --file /root/.siege/urls.txt --benchmark --concurrent=10 --time=300S --internet --log=/root/.siege/siege.log --header='Cookie: _session_id={{ session_id_cmd.stdout }}'"
      register: siege_cmd

    - name: "Showing results"
      debug:
        msg: "{{ siege_cmd.stdout|from_json }}"
    - name: "Storing results locally to {{ siege_result_json_file }}"
      delegate_to: localhost
      copy:
        dest: "{{ siege_result_json_file }}"
        content: "{{ siege_cmd.stdout|from_json|to_nice_json }}"
        force: yes
...
