---
- name: "Generate the host registration command"
  hosts: satellite6:capsules
  gather_facts: false
  vars:
    hgrg: "host-registration generate-command --organization '{{ organization }}' --activation-key {{ ak }} --location {{ location }} --jwt-expiration {{ jwt_expiration | default(720) | int }} --insecure true --force true"
  tasks:
    - name: "Get capsule ID"
      # XXX: Submit PR
      throttle: 1
      ansible.builtin.command:
        cmd: |
          hammer --no-headers -u {{ sat_user }} -p {{ sat_pass }} capsule list --organization '{{ organization }}' --search 'name = {{ inventory_hostname }}' --fields id
      register: capsule_id_cmd
      changed_when: capsule_id_cmd.rc != 0
      delegate_to: "{{ groups['satellite6'] | first }}"
      when:
        - "'capsules' in group_names"

    - name: "Set capsule ID"
      ansible.builtin.set_fact:
        capsule_id: "{{ capsule_id_cmd.stdout }}"
      when:
        - "'capsules' in group_names"

    - name: "Check if running in a capsule"
      ansible.builtin.set_fact:
        hgrg: "{{ hgrg }} --smart-proxy-id {{ capsule_id }}"
      when:
        - "'capsules' in group_names"

    - name: "Check if Insights client should be installed and configured (it won't be by default)"
      ansible.builtin.set_fact:
        hgrg: "{{ hgrg }} --setup-insights false"
      when:
        - setup_insights is not defined or not setup_insights

    - name: "Check if MQTT REX mode is needed"
      ansible.builtin.set_fact:
        hgrg: "{{ hgrg }} --setup-remote-execution-pull true"
      when:
        - rex_mode is defined and rex_mode == 'mqtt'

    - name: "Check if some package should be installed"
      ansible.builtin.set_fact:
        hgrg: "{{ hgrg }} --packages {{ packages }}"
      when:
        - packages is defined and packages | length > 0

    - name: "Generate the host registration command"
      ansible.builtin.command:
        cmd: |
          hammer -u {{ sat_user }} -p {{ sat_pass }} {{ hgrg }}
      register: cmd
      delegate_to: "{{ groups['satellite6'] | first }}"

    - name: Copy the output of the the host registration command to the Apache pub directory
      ansible.builtin.copy:
        content: "{{ cmd.stdout }}"
        dest: /var/www/html/pub/host-registration.sh
        mode: '0644'
      when:
        - cmd.rc == 0
...
